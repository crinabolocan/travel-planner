version: '3.9'

services:
  # Traefik - gateway HTTP public
  traefik:
    image: traefik:v2.10
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
    ports:
      - "80:80"         # HTTP entrypoint
      - "8080:8080"     # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app_net

  # AuthService - autentificare + JWT
  authservice:
    build: ./AuthService
    image: authservice:latest
    ports:
      - "5001:8080"
    depends_on:
      - userdataservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=PathPrefix(`/auth`)"
      - "traefik.http.services.auth.loadbalancer.server.port=8080"
    networks:
      - app_net

  # UserDataService - date utilizatori (DB + API)
  userdataservice:
    image: userdataservice:latest
    ports:
      - "5002:8080"
    depends_on:
      - db-users
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.userdata.rule=PathPrefix(`/user`)"
      - "traefik.http.services.userdata.loadbalancer.server.port=8080"
    networks:
      - app_net

  # DB pentru UserDataService
  db-users:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: usersdb
    volumes:
      - users_pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - app_net

  # TripPlannerService - planificare călătorii
  tripplannerservice:
    image: tripplannerservice:latest
    ports:
      - "5003:8080"
    depends_on:
      - db-trip
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.trip.rule=PathPrefix(`/trip`)"
      - "traefik.http.services.trip.loadbalancer.server.port=8080"
    networks:
      - app_net

  # DB pentru TripPlannerService
  db-trip:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tripdb
    ports:
      - "5434:5432"
    volumes:
      - trip_pgdata:/var/lib/postgresql/data
    networks:
      - app_net

  # Adminer - UI pentru baze de date
  adminer:
    image: adminer
    restart: always
    ports:
      - "8085:8080"
    networks:
      - app_net

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app_net

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - app_net


networks:
  app_net:

volumes:
  users_pgdata:
  trip_pgdata:
